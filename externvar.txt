
/* These data types used in both cv_blob_locator.c and video_capture.c */
typedef unsigned char       uint8_t;/*8 bit unsigned char */
typedef   signed char        int8_t;/*8 bit signed char */
typedef unsigned short     uint16_t; /*16 bit unsigned short */
typedef   signed short      int16_t;/*16 bit signed short */
typedef unsigned long      uint32_t;/*32 bit unsigned long */
typedef   signed long       int32_t;/*32 bit signed long */
typedef unsigned long long uint64_t; /*64 bit unsigned long */
typedef   signed long long  int64_t; /*64 bit signed long */

/* Main image structure */
struct image_t {
  enum image_type type;   ///< The image type
  uint16_t w;             ///< Image width
  uint16_t h;             ///< Image height
  struct timeval ts;      ///< The timestamp of creation
  struct FloatEulers *eulerAngles;   ///< Pointer to the Euler Angles
  uint32_t pprz_ts;       ///< The timestamp in us since system startup

  uint8_t buf_idx;        ///< Buffer index for V4L2 freeing
  uint32_t buf_size;      ///< The buffer size
  void *buf;              ///< Image buffer (depending on the image_type)
};


struct camera_frame_t {
  int32_t w;     ///< Frame width [px]
  int32_t h;     ///< Frame height [px]
  int32_t f;     ///< Camera Focal length in [px]
  int32_t px;    ///< Target pixel coordinate (left = 0)
  int32_t py;    ///< Target pixel coordinate (top = 0)
};


// georeference_init(); used in cv_blob_locator.c 
struct georeference_t {
  struct Int32Vect3 target_i;   ///< Target in pixels, with z being the focal length in pixels, x=up,y=right,out
  struct Int32Vect3 target_l;   ///< Target in meters, relative to the drone in LTP frame

  struct Int32Vect3 x_t;        ///< Target coordinates NED

  struct georeference_filter_t filter;  ///< Filter waypoint location
};


/*available in blob_finder.h and used in blob_locator.c in image_labelling*/
/* Blob object: connected pixels */
struct image_label_t {
  uint16_t id;              ///< Blob number
  uint8_t filter;           ///< Which filter triggered this blob

  uint32_t pixel_cnt;       ///< Number of pixels in the blob
  uint16_t x_min;           ///< Top left corner
  uint16_t y_min;
  uint32_t x_sum;           ///< Sum of all x coordinates (used to find center of gravity)
  uint32_t y_sum;

  struct point_t contour[512];
  uint16_t contour_cnt;

  uint16_t corners[4];
};